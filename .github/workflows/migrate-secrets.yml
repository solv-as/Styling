
name: move-secrets
on:
  push:
    branches: [ "202501311540-migrate-secrets" ]
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Install PSSodium
        run: Install-Module -Name PSSodium -Repository PSGallery -Force
        shell: pwsh
        
      - name: Migrate Secrets
        run: |
          Import-Module PSSodium

          $targetPat = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($env:TARGET_PAT)"))
          $publicKeyResponse = Invoke-RestMethod -Uri "https://api.github.com/repos/$env:TARGET_ORG/$env:TARGET_REPO/actions/secrets/public-key" -Method "GET" -Headers @{ Authorization = "Basic $targetPat" }
          $publicKey = [Convert]::FromBase64String($publicKeyResponse.key)
          $publicKeyId = $publicKeyResponse.key_id
          
          # Encrypt secrets
          $secrets = ${env:REPO_SECRETS} | ConvertFrom-Json
          foreach ($secret in $secrets.PSObject.Properties) {
            $secretName = $secret.Name
            $secretValue = $secret.Value

            if ($secretName -ne "github_token" -and $secretName -ne "SECRETS_MIGRATOR_PAT") {
              $encryptedSecret = ConvertTo-SodiumEncryptedString -Text $secretValue -PublicKey $publicKeyResponse.key

              $Params = @{
                Uri = "https://api.github.com/repos/${env:TARGET_ORG}/${env:TARGET_REPO}/actions/secrets/$secretName"
                Headers = @{
                  Authorization = "Basic $targetPat"
                }
                Method = "PUT"
                Body = "{ `"encrypted_value`": `"$encryptedSecret`", `"key_id`": `"$publicKeyId`" }"
              }

              $createSecretResponse = Invoke-RestMethod @Params
            }
          }
        env:
          REPO_SECRETS: ${{ toJSON(secrets) }}
          TARGET_PAT: ${{ secrets.SECRETS_MIGRATOR_PAT }}
          TARGET_ORG: 'advania-consultingwest'
          TARGET_REPO: 'solv-as.github.io'
        shell: pwsh
