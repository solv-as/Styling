
name: move-secrets
on:
  push:
    branches: [ "migrate-secrets" ]
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Install Crypto Package
        run: |
          Install-Package -Name Sodium.Core -ProviderName NuGet -Scope CurrentUser -RequiredVersion 1.3.0 -Destination . -Force
        shell: pwsh
      - name: Migrate Secrets
        run: |
          $sodiumPath = Resolve-Path ".\Sodium.Core.1.3.0\lib\\netstandard2.1\Sodium.Core.dll"
          [System.Reflection.Assembly]::LoadFrom($sodiumPath)

          $targetPat = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($env:TARGET_PAT)"))
          $publicKeyResponse = Invoke-RestMethod -Uri "https://api.github.com/repos/$env:TARGET_ORG/$env:TARGET_REPO/actions/secrets/public-key" -Method "GET" -Headers @{ Authorization = "Basic $targetPat" }
          $publicKey = [Convert]::FromBase64String($publicKeyResponse.key)
          $publicKeyId = $publicKeyResponse.key_id
              
          $secrets = $env:REPO_SECRETS | ConvertFrom-Json
          $secrets | Get-Member -MemberType NoteProperty | ForEach-Object {
            $secretName = $_.Name
            $secretValue = $secrets."$secretName"
     
            if ($secretName -ne "github_token" -and $secretName -ne "SECRETS_MIGRATOR_PAT") {
              Write-Output "Migrating Secret: $secretName"
              $secretBytes = [Text.Encoding]::UTF8.GetBytes($secretValue)
              $sealedPublicKeyBox = [Sodium.SealedPublicKeyBox]::Create($secretBytes, $publicKey)
              $encryptedSecret = [Convert]::ToBase64String($sealedPublicKeyBox)
                 
              $Params = @{
                Uri = "https://api.github.com/repos/$env:TARGET_ORG/$env:TARGET_REPO/actions/secrets/$secretName"
                Headers = @{
                  Authorization = "Basic $targetPat"
                }
                Method = "PUT"
                Body = "{ `"encrypted_value`": `"$encryptedSecret`", `"key_id`": `"$publicKeyId`" }"
              }

              $createSecretResponse = Invoke-RestMethod @Params
            }
          }

          Write-Output "Cleaning up..."
          Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/git/${{ github.ref }}" -Method "DELETE" -Headers @{ Authorization = "Basic $targetPat" }
          Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/actions/secrets/SECRETS_MIGRATOR_PAT" -Method "DELETE" -Headers @{ Authorization = "Basic $targetPat" }
        env:
          REPO_SECRETS: ${{ toJSON(secrets) }}
          TARGET_PAT: ${{ secrets.SECRETS_MIGRATOR_PAT }}
          TARGET_ORG: 'advania-consultingwest'
          TARGET_REPO: 'solv-as.github.io'
        shell: pwsh
